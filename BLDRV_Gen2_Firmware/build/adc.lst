ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/adc.c"
  20              		.section	.text.MX_ADC1_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_ADC1_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_ADC1_Init:
  28              	.LFB123:
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC1 init function */
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 2


  31:Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:Core/Src/adc.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_MultiModeTypeDef multimode = {0};
  40              		.loc 1 38 3 view .LVU1
  41              		.loc 1 38 24 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0793     		str	r3, [sp, #28]
  44 0008 0893     		str	r3, [sp, #32]
  45 000a 0993     		str	r3, [sp, #36]
  39:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  46              		.loc 1 39 3 is_stmt 1 view .LVU3
  47              		.loc 1 39 26 is_stmt 0 view .LVU4
  48 000c 0193     		str	r3, [sp, #4]
  49 000e 0293     		str	r3, [sp, #8]
  50 0010 0393     		str	r3, [sp, #12]
  51 0012 0493     		str	r3, [sp, #16]
  52 0014 0593     		str	r3, [sp, #20]
  53 0016 0693     		str	r3, [sp, #24]
  40:Core/Src/adc.c **** 
  41:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  42:Core/Src/adc.c **** 
  43:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  44:Core/Src/adc.c **** 
  45:Core/Src/adc.c ****   /** Common config
  46:Core/Src/adc.c ****   */
  47:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  54              		.loc 1 47 3 is_stmt 1 view .LVU5
  55              		.loc 1 47 18 is_stmt 0 view .LVU6
  56 0018 2848     		ldr	r0, .L13
  57 001a 4FF0A042 		mov	r2, #1342177280
  58 001e 0260     		str	r2, [r0]
  48:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  59              		.loc 1 48 3 is_stmt 1 view .LVU7
  60              		.loc 1 48 29 is_stmt 0 view .LVU8
  61 0020 4FF44032 		mov	r2, #196608
  62 0024 4260     		str	r2, [r0, #4]
  49:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  63              		.loc 1 49 3 is_stmt 1 view .LVU9
  64              		.loc 1 49 25 is_stmt 0 view .LVU10
  65 0026 8360     		str	r3, [r0, #8]
  50:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 3


  66              		.loc 1 50 3 is_stmt 1 view .LVU11
  67              		.loc 1 50 27 is_stmt 0 view .LVU12
  68 0028 0122     		movs	r2, #1
  69 002a 0261     		str	r2, [r0, #16]
  51:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
  70              		.loc 1 51 3 is_stmt 1 view .LVU13
  71              		.loc 1 51 33 is_stmt 0 view .LVU14
  72 002c 4276     		strb	r2, [r0, #25]
  52:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  73              		.loc 1 52 3 is_stmt 1 view .LVU15
  74              		.loc 1 52 36 is_stmt 0 view .LVU16
  75 002e 80F82030 		strb	r3, [r0, #32]
  53:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  76              		.loc 1 53 3 is_stmt 1 view .LVU17
  77              		.loc 1 53 35 is_stmt 0 view .LVU18
  78 0032 C362     		str	r3, [r0, #44]
  54:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  79              		.loc 1 54 3 is_stmt 1 view .LVU19
  80              		.loc 1 54 31 is_stmt 0 view .LVU20
  81 0034 8262     		str	r2, [r0, #40]
  55:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  82              		.loc 1 55 3 is_stmt 1 view .LVU21
  83              		.loc 1 55 24 is_stmt 0 view .LVU22
  84 0036 C360     		str	r3, [r0, #12]
  56:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 3;
  85              		.loc 1 56 3 is_stmt 1 view .LVU23
  86              		.loc 1 56 30 is_stmt 0 view .LVU24
  87 0038 0321     		movs	r1, #3
  88 003a C161     		str	r1, [r0, #28]
  57:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  89              		.loc 1 57 3 is_stmt 1 view .LVU25
  90              		.loc 1 57 36 is_stmt 0 view .LVU26
  91 003c 80F83020 		strb	r2, [r0, #48]
  58:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  92              		.loc 1 58 3 is_stmt 1 view .LVU27
  93              		.loc 1 58 27 is_stmt 0 view .LVU28
  94 0040 0422     		movs	r2, #4
  95 0042 4261     		str	r2, [r0, #20]
  59:Core/Src/adc.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  96              		.loc 1 59 3 is_stmt 1 view .LVU29
  97              		.loc 1 59 31 is_stmt 0 view .LVU30
  98 0044 0376     		strb	r3, [r0, #24]
  60:Core/Src/adc.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  99              		.loc 1 60 3 is_stmt 1 view .LVU31
 100              		.loc 1 60 22 is_stmt 0 view .LVU32
 101 0046 4363     		str	r3, [r0, #52]
  61:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 102              		.loc 1 61 3 is_stmt 1 view .LVU33
 103              		.loc 1 61 7 is_stmt 0 view .LVU34
 104 0048 FFF7FEFF 		bl	HAL_ADC_Init
 105              	.LVL0:
 106              		.loc 1 61 6 view .LVU35
 107 004c 30BB     		cbnz	r0, .L8
 108              	.L2:
  62:Core/Src/adc.c ****   {
  63:Core/Src/adc.c ****     Error_Handler();
  64:Core/Src/adc.c ****   }
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 4


  65:Core/Src/adc.c **** 
  66:Core/Src/adc.c ****   /** Configure the ADC multi-mode
  67:Core/Src/adc.c ****   */
  68:Core/Src/adc.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 109              		.loc 1 68 3 is_stmt 1 view .LVU36
 110              		.loc 1 68 18 is_stmt 0 view .LVU37
 111 004e 0023     		movs	r3, #0
 112 0050 0793     		str	r3, [sp, #28]
  69:Core/Src/adc.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 113              		.loc 1 69 3 is_stmt 1 view .LVU38
 114              		.loc 1 69 7 is_stmt 0 view .LVU39
 115 0052 07A9     		add	r1, sp, #28
 116 0054 1948     		ldr	r0, .L13
 117 0056 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 118              	.LVL1:
 119              		.loc 1 69 6 view .LVU40
 120 005a 10BB     		cbnz	r0, .L9
 121              	.L3:
  70:Core/Src/adc.c ****   {
  71:Core/Src/adc.c ****     Error_Handler();
  72:Core/Src/adc.c ****   }
  73:Core/Src/adc.c **** 
  74:Core/Src/adc.c ****   /** Configure Regular Channel
  75:Core/Src/adc.c ****   */
  76:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 122              		.loc 1 76 3 is_stmt 1 view .LVU41
 123              		.loc 1 76 19 is_stmt 0 view .LVU42
 124 005c 0123     		movs	r3, #1
 125 005e 0193     		str	r3, [sp, #4]
  77:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 126              		.loc 1 77 3 is_stmt 1 view .LVU43
 127              		.loc 1 77 16 is_stmt 0 view .LVU44
 128 0060 0293     		str	r3, [sp, #8]
  78:Core/Src/adc.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 129              		.loc 1 78 3 is_stmt 1 view .LVU45
 130              		.loc 1 78 22 is_stmt 0 view .LVU46
 131 0062 0023     		movs	r3, #0
 132 0064 0493     		str	r3, [sp, #16]
  79:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_19CYCLES_5;
 133              		.loc 1 79 3 is_stmt 1 view .LVU47
 134              		.loc 1 79 24 is_stmt 0 view .LVU48
 135 0066 0422     		movs	r2, #4
 136 0068 0392     		str	r2, [sp, #12]
  80:Core/Src/adc.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 137              		.loc 1 80 3 is_stmt 1 view .LVU49
 138              		.loc 1 80 24 is_stmt 0 view .LVU50
 139 006a 0593     		str	r3, [sp, #20]
  81:Core/Src/adc.c ****   sConfig.Offset = 0;
 140              		.loc 1 81 3 is_stmt 1 view .LVU51
 141              		.loc 1 81 18 is_stmt 0 view .LVU52
 142 006c 0693     		str	r3, [sp, #24]
  82:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 143              		.loc 1 82 3 is_stmt 1 view .LVU53
 144              		.loc 1 82 7 is_stmt 0 view .LVU54
 145 006e 0DEB0201 		add	r1, sp, r2
 146 0072 1248     		ldr	r0, .L13
 147 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 5


 148              	.LVL2:
 149              		.loc 1 82 6 view .LVU55
 150 0078 B0B9     		cbnz	r0, .L10
 151              	.L4:
  83:Core/Src/adc.c ****   {
  84:Core/Src/adc.c ****     Error_Handler();
  85:Core/Src/adc.c ****   }
  86:Core/Src/adc.c **** 
  87:Core/Src/adc.c ****   /** Configure Regular Channel
  88:Core/Src/adc.c ****   */
  89:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 152              		.loc 1 89 3 is_stmt 1 view .LVU56
 153              		.loc 1 89 16 is_stmt 0 view .LVU57
 154 007a 0223     		movs	r3, #2
 155 007c 0293     		str	r3, [sp, #8]
  90:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 156              		.loc 1 90 3 is_stmt 1 view .LVU58
 157              		.loc 1 90 7 is_stmt 0 view .LVU59
 158 007e 01A9     		add	r1, sp, #4
 159 0080 0E48     		ldr	r0, .L13
 160 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 161              	.LVL3:
 162              		.loc 1 90 6 view .LVU60
 163 0086 90B9     		cbnz	r0, .L11
 164              	.L5:
  91:Core/Src/adc.c ****   {
  92:Core/Src/adc.c ****     Error_Handler();
  93:Core/Src/adc.c ****   }
  94:Core/Src/adc.c **** 
  95:Core/Src/adc.c ****   /** Configure Regular Channel
  96:Core/Src/adc.c ****   */
  97:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 165              		.loc 1 97 3 is_stmt 1 view .LVU61
 166              		.loc 1 97 16 is_stmt 0 view .LVU62
 167 0088 0323     		movs	r3, #3
 168 008a 0293     		str	r3, [sp, #8]
  98:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 169              		.loc 1 98 3 is_stmt 1 view .LVU63
 170              		.loc 1 98 7 is_stmt 0 view .LVU64
 171 008c 01A9     		add	r1, sp, #4
 172 008e 0B48     		ldr	r0, .L13
 173 0090 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 174              	.LVL4:
 175              		.loc 1 98 6 view .LVU65
 176 0094 70B9     		cbnz	r0, .L12
 177              	.L1:
  99:Core/Src/adc.c ****   {
 100:Core/Src/adc.c ****     Error_Handler();
 101:Core/Src/adc.c ****   }
 102:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 103:Core/Src/adc.c **** 
 104:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
 105:Core/Src/adc.c **** 
 106:Core/Src/adc.c **** }
 178              		.loc 1 106 1 view .LVU66
 179 0096 0BB0     		add	sp, sp, #44
 180              	.LCFI2:
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 6


 181              		.cfi_remember_state
 182              		.cfi_def_cfa_offset 4
 183              		@ sp needed
 184 0098 5DF804FB 		ldr	pc, [sp], #4
 185              	.L8:
 186              	.LCFI3:
 187              		.cfi_restore_state
  63:Core/Src/adc.c ****   }
 188              		.loc 1 63 5 is_stmt 1 view .LVU67
 189 009c FFF7FEFF 		bl	Error_Handler
 190              	.LVL5:
 191 00a0 D5E7     		b	.L2
 192              	.L9:
  71:Core/Src/adc.c ****   }
 193              		.loc 1 71 5 view .LVU68
 194 00a2 FFF7FEFF 		bl	Error_Handler
 195              	.LVL6:
 196 00a6 D9E7     		b	.L3
 197              	.L10:
  84:Core/Src/adc.c ****   }
 198              		.loc 1 84 5 view .LVU69
 199 00a8 FFF7FEFF 		bl	Error_Handler
 200              	.LVL7:
 201 00ac E5E7     		b	.L4
 202              	.L11:
  92:Core/Src/adc.c ****   }
 203              		.loc 1 92 5 view .LVU70
 204 00ae FFF7FEFF 		bl	Error_Handler
 205              	.LVL8:
 206 00b2 E9E7     		b	.L5
 207              	.L12:
 100:Core/Src/adc.c ****   }
 208              		.loc 1 100 5 view .LVU71
 209 00b4 FFF7FEFF 		bl	Error_Handler
 210              	.LVL9:
 211              		.loc 1 106 1 is_stmt 0 view .LVU72
 212 00b8 EDE7     		b	.L1
 213              	.L14:
 214 00ba 00BF     		.align	2
 215              	.L13:
 216 00bc 00000000 		.word	hadc1
 217              		.cfi_endproc
 218              	.LFE123:
 220              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 221              		.align	1
 222              		.global	HAL_ADC_MspInit
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	HAL_ADC_MspInit:
 228              	.LVL10:
 229              	.LFB124:
 107:Core/Src/adc.c **** 
 108:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 109:Core/Src/adc.c **** {
 230              		.loc 1 109 1 is_stmt 1 view -0
 231              		.cfi_startproc
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 7


 232              		@ args = 0, pretend = 0, frame = 32
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		.loc 1 109 1 is_stmt 0 view .LVU74
 235 0000 10B5     		push	{r4, lr}
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 14, -4
 240 0002 88B0     		sub	sp, sp, #32
 241              	.LCFI5:
 242              		.cfi_def_cfa_offset 40
 110:Core/Src/adc.c **** 
 111:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 243              		.loc 1 111 3 is_stmt 1 view .LVU75
 244              		.loc 1 111 20 is_stmt 0 view .LVU76
 245 0004 0023     		movs	r3, #0
 246 0006 0393     		str	r3, [sp, #12]
 247 0008 0493     		str	r3, [sp, #16]
 248 000a 0593     		str	r3, [sp, #20]
 249 000c 0693     		str	r3, [sp, #24]
 250 000e 0793     		str	r3, [sp, #28]
 112:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 251              		.loc 1 112 3 is_stmt 1 view .LVU77
 252              		.loc 1 112 15 is_stmt 0 view .LVU78
 253 0010 0368     		ldr	r3, [r0]
 254              		.loc 1 112 5 view .LVU79
 255 0012 B3F1A04F 		cmp	r3, #1342177280
 256 0016 01D0     		beq	.L19
 257              	.LVL11:
 258              	.L15:
 113:Core/Src/adc.c ****   {
 114:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 115:Core/Src/adc.c **** 
 116:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 117:Core/Src/adc.c ****     /* ADC1 clock enable */
 118:Core/Src/adc.c ****     __HAL_RCC_ADC12_CLK_ENABLE();
 119:Core/Src/adc.c **** 
 120:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 121:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 122:Core/Src/adc.c ****     PA0     ------> ADC1_IN1
 123:Core/Src/adc.c ****     PA1     ------> ADC1_IN2
 124:Core/Src/adc.c ****     PA2     ------> ADC1_IN3
 125:Core/Src/adc.c ****     */
 126:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 127:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 128:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 129:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 130:Core/Src/adc.c **** 
 131:Core/Src/adc.c ****     /* ADC1 DMA Init */
 132:Core/Src/adc.c ****     /* ADC1 Init */
 133:Core/Src/adc.c ****     hdma_adc1.Instance = DMA1_Channel1;
 134:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 135:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 136:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 137:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 138:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 139:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 8


 140:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 141:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 142:Core/Src/adc.c ****     {
 143:Core/Src/adc.c ****       Error_Handler();
 144:Core/Src/adc.c ****     }
 145:Core/Src/adc.c **** 
 146:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 147:Core/Src/adc.c **** 
 148:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 149:Core/Src/adc.c **** 
 150:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 151:Core/Src/adc.c ****   }
 152:Core/Src/adc.c **** }
 259              		.loc 1 152 1 view .LVU80
 260 0018 08B0     		add	sp, sp, #32
 261              	.LCFI6:
 262              		.cfi_remember_state
 263              		.cfi_def_cfa_offset 8
 264              		@ sp needed
 265 001a 10BD     		pop	{r4, pc}
 266              	.LVL12:
 267              	.L19:
 268              	.LCFI7:
 269              		.cfi_restore_state
 270              		.loc 1 152 1 view .LVU81
 271 001c 0446     		mov	r4, r0
 118:Core/Src/adc.c **** 
 272              		.loc 1 118 5 is_stmt 1 view .LVU82
 273              	.LBB2:
 118:Core/Src/adc.c **** 
 274              		.loc 1 118 5 view .LVU83
 118:Core/Src/adc.c **** 
 275              		.loc 1 118 5 view .LVU84
 276 001e 03F17043 		add	r3, r3, #-268435456
 277 0022 03F50433 		add	r3, r3, #135168
 278 0026 5A69     		ldr	r2, [r3, #20]
 279 0028 42F08052 		orr	r2, r2, #268435456
 280 002c 5A61     		str	r2, [r3, #20]
 118:Core/Src/adc.c **** 
 281              		.loc 1 118 5 view .LVU85
 282 002e 5A69     		ldr	r2, [r3, #20]
 283 0030 02F08052 		and	r2, r2, #268435456
 284 0034 0192     		str	r2, [sp, #4]
 118:Core/Src/adc.c **** 
 285              		.loc 1 118 5 view .LVU86
 286 0036 019A     		ldr	r2, [sp, #4]
 287              	.LBE2:
 118:Core/Src/adc.c **** 
 288              		.loc 1 118 5 view .LVU87
 120:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 289              		.loc 1 120 5 view .LVU88
 290              	.LBB3:
 120:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 291              		.loc 1 120 5 view .LVU89
 120:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 292              		.loc 1 120 5 view .LVU90
 293 0038 5A69     		ldr	r2, [r3, #20]
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 9


 294 003a 42F40032 		orr	r2, r2, #131072
 295 003e 5A61     		str	r2, [r3, #20]
 120:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 296              		.loc 1 120 5 view .LVU91
 297 0040 5B69     		ldr	r3, [r3, #20]
 298 0042 03F40033 		and	r3, r3, #131072
 299 0046 0293     		str	r3, [sp, #8]
 120:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 300              		.loc 1 120 5 view .LVU92
 301 0048 029B     		ldr	r3, [sp, #8]
 302              	.LBE3:
 120:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 303              		.loc 1 120 5 view .LVU93
 126:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 304              		.loc 1 126 5 view .LVU94
 126:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 305              		.loc 1 126 25 is_stmt 0 view .LVU95
 306 004a 0723     		movs	r3, #7
 307 004c 0393     		str	r3, [sp, #12]
 127:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 308              		.loc 1 127 5 is_stmt 1 view .LVU96
 127:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 309              		.loc 1 127 26 is_stmt 0 view .LVU97
 310 004e 0323     		movs	r3, #3
 311 0050 0493     		str	r3, [sp, #16]
 128:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 312              		.loc 1 128 5 is_stmt 1 view .LVU98
 129:Core/Src/adc.c **** 
 313              		.loc 1 129 5 view .LVU99
 314 0052 03A9     		add	r1, sp, #12
 315 0054 4FF09040 		mov	r0, #1207959552
 316              	.LVL13:
 129:Core/Src/adc.c **** 
 317              		.loc 1 129 5 is_stmt 0 view .LVU100
 318 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL14:
 133:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 320              		.loc 1 133 5 is_stmt 1 view .LVU101
 133:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 321              		.loc 1 133 24 is_stmt 0 view .LVU102
 322 005c 0B48     		ldr	r0, .L21
 323 005e 0C4B     		ldr	r3, .L21+4
 324 0060 0360     		str	r3, [r0]
 134:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 325              		.loc 1 134 5 is_stmt 1 view .LVU103
 134:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 326              		.loc 1 134 30 is_stmt 0 view .LVU104
 327 0062 0023     		movs	r3, #0
 328 0064 4360     		str	r3, [r0, #4]
 135:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 329              		.loc 1 135 5 is_stmt 1 view .LVU105
 135:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 330              		.loc 1 135 30 is_stmt 0 view .LVU106
 331 0066 8360     		str	r3, [r0, #8]
 136:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 332              		.loc 1 136 5 is_stmt 1 view .LVU107
 136:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 10


 333              		.loc 1 136 27 is_stmt 0 view .LVU108
 334 0068 8022     		movs	r2, #128
 335 006a C260     		str	r2, [r0, #12]
 137:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 336              		.loc 1 137 5 is_stmt 1 view .LVU109
 137:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 337              		.loc 1 137 40 is_stmt 0 view .LVU110
 338 006c 0361     		str	r3, [r0, #16]
 138:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 339              		.loc 1 138 5 is_stmt 1 view .LVU111
 138:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 340              		.loc 1 138 37 is_stmt 0 view .LVU112
 341 006e 4361     		str	r3, [r0, #20]
 139:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 342              		.loc 1 139 5 is_stmt 1 view .LVU113
 139:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 343              		.loc 1 139 25 is_stmt 0 view .LVU114
 344 0070 2022     		movs	r2, #32
 345 0072 8261     		str	r2, [r0, #24]
 140:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 346              		.loc 1 140 5 is_stmt 1 view .LVU115
 140:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 347              		.loc 1 140 29 is_stmt 0 view .LVU116
 348 0074 C361     		str	r3, [r0, #28]
 141:Core/Src/adc.c ****     {
 349              		.loc 1 141 5 is_stmt 1 view .LVU117
 141:Core/Src/adc.c ****     {
 350              		.loc 1 141 9 is_stmt 0 view .LVU118
 351 0076 FFF7FEFF 		bl	HAL_DMA_Init
 352              	.LVL15:
 141:Core/Src/adc.c ****     {
 353              		.loc 1 141 8 view .LVU119
 354 007a 18B9     		cbnz	r0, .L20
 355              	.L17:
 146:Core/Src/adc.c **** 
 356              		.loc 1 146 5 is_stmt 1 view .LVU120
 146:Core/Src/adc.c **** 
 357              		.loc 1 146 5 view .LVU121
 358 007c 034B     		ldr	r3, .L21
 359 007e A363     		str	r3, [r4, #56]
 146:Core/Src/adc.c **** 
 360              		.loc 1 146 5 view .LVU122
 361 0080 5C62     		str	r4, [r3, #36]
 146:Core/Src/adc.c **** 
 362              		.loc 1 146 5 view .LVU123
 363              		.loc 1 152 1 is_stmt 0 view .LVU124
 364 0082 C9E7     		b	.L15
 365              	.L20:
 143:Core/Src/adc.c ****     }
 366              		.loc 1 143 7 is_stmt 1 view .LVU125
 367 0084 FFF7FEFF 		bl	Error_Handler
 368              	.LVL16:
 369 0088 F8E7     		b	.L17
 370              	.L22:
 371 008a 00BF     		.align	2
 372              	.L21:
 373 008c 00000000 		.word	hdma_adc1
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 11


 374 0090 08000240 		.word	1073872904
 375              		.cfi_endproc
 376              	.LFE124:
 378              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 379              		.align	1
 380              		.global	HAL_ADC_MspDeInit
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 385              	HAL_ADC_MspDeInit:
 386              	.LVL17:
 387              	.LFB125:
 153:Core/Src/adc.c **** 
 154:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 155:Core/Src/adc.c **** {
 388              		.loc 1 155 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 156:Core/Src/adc.c **** 
 157:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 392              		.loc 1 157 3 view .LVU127
 393              		.loc 1 157 15 is_stmt 0 view .LVU128
 394 0000 0368     		ldr	r3, [r0]
 395              		.loc 1 157 5 view .LVU129
 396 0002 B3F1A04F 		cmp	r3, #1342177280
 397 0006 00D0     		beq	.L29
 398 0008 7047     		bx	lr
 399              	.L29:
 155:Core/Src/adc.c **** 
 400              		.loc 1 155 1 view .LVU130
 401 000a 10B5     		push	{r4, lr}
 402              	.LCFI8:
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 4, -8
 405              		.cfi_offset 14, -4
 406 000c 0446     		mov	r4, r0
 158:Core/Src/adc.c ****   {
 159:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 160:Core/Src/adc.c **** 
 161:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 162:Core/Src/adc.c ****     /* Peripheral clock disable */
 163:Core/Src/adc.c ****     __HAL_RCC_ADC12_CLK_DISABLE();
 407              		.loc 1 163 5 is_stmt 1 view .LVU131
 408 000e 074A     		ldr	r2, .L30
 409 0010 5369     		ldr	r3, [r2, #20]
 410 0012 23F08053 		bic	r3, r3, #268435456
 411 0016 5361     		str	r3, [r2, #20]
 164:Core/Src/adc.c **** 
 165:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 166:Core/Src/adc.c ****     PA0     ------> ADC1_IN1
 167:Core/Src/adc.c ****     PA1     ------> ADC1_IN2
 168:Core/Src/adc.c ****     PA2     ------> ADC1_IN3
 169:Core/Src/adc.c ****     */
 170:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2);
 412              		.loc 1 170 5 view .LVU132
 413 0018 0721     		movs	r1, #7
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 12


 414 001a 4FF09040 		mov	r0, #1207959552
 415              	.LVL18:
 416              		.loc 1 170 5 is_stmt 0 view .LVU133
 417 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 418              	.LVL19:
 171:Core/Src/adc.c **** 
 172:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 173:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 419              		.loc 1 173 5 is_stmt 1 view .LVU134
 420 0022 A06B     		ldr	r0, [r4, #56]
 421 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 422              	.LVL20:
 174:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 175:Core/Src/adc.c **** 
 176:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 177:Core/Src/adc.c ****   }
 178:Core/Src/adc.c **** }
 423              		.loc 1 178 1 is_stmt 0 view .LVU135
 424 0028 10BD     		pop	{r4, pc}
 425              	.LVL21:
 426              	.L31:
 427              		.loc 1 178 1 view .LVU136
 428 002a 00BF     		.align	2
 429              	.L30:
 430 002c 00100240 		.word	1073876992
 431              		.cfi_endproc
 432              	.LFE125:
 434              		.global	hdma_adc1
 435              		.section	.bss.hdma_adc1,"aw",%nobits
 436              		.align	2
 439              	hdma_adc1:
 440 0000 00000000 		.space	68
 440      00000000 
 440      00000000 
 440      00000000 
 440      00000000 
 441              		.global	hadc1
 442              		.section	.bss.hadc1,"aw",%nobits
 443              		.align	2
 446              	hadc1:
 447 0000 00000000 		.space	80
 447      00000000 
 447      00000000 
 447      00000000 
 447      00000000 
 448              		.text
 449              	.Letext0:
 450              		.file 2 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 451              		.file 3 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 452              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 453              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 454              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 455              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 456              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 457              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 458              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 459              		.file 11 "Core/Inc/adc.h"
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 13


 460              		.file 12 "Core/Inc/main.h"
ARM GAS  /var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:21     .text.MX_ADC1_Init:00000000 $t
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:27     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:216    .text.MX_ADC1_Init:000000bc $d
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:446    .bss.hadc1:00000000 hadc1
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:221    .text.HAL_ADC_MspInit:00000000 $t
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:227    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:373    .text.HAL_ADC_MspInit:0000008c $d
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:439    .bss.hdma_adc1:00000000 hdma_adc1
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:379    .text.HAL_ADC_MspDeInit:00000000 $t
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:385    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:430    .text.HAL_ADC_MspDeInit:0000002c $d
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:436    .bss.hdma_adc1:00000000 $d
/var/folders/l2/71_2bdwd5hl5fnnvwg2sr4v80000gn/T//ccEa9r7o.s:443    .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
